int.result
int.result*4
int.result$value*4
?runif
N <- 100000
rx <- runif(N)
ry <- runif(N)
points(rx,ry,pch=".")
?points
rx
?runif
runif(2)
runif(2)
our.pi <- 4*(ry<f(rx))
4*sum(rx*rx + ry*ry <= 1)/N
our.pi
library("hexbin")
rx <- rnorm(N)
ry <- rnorm(N)
plot(hexbin(rx,ry))
plot(rx,ry,pch=".")
?exp()
f2 <- function(x) 5*x- exp(x)
plot(f2, xlim=c(-3,3))
uniroot(f2,c(1,3)$root)
(uniroot(f2,c(1,3))$root)
hist(rpois(1000,20))
profit <- function (S,D) 1*pmin(D,S) - 0.25*S
fx <- deriv(~1-sqrt(1-x*x),c("x"),function.arg = c("x"))
fx
plot(fx, xlim=c(-1,1))
dx2x <- deriv(~ x^2, "x") ; dx2x
x <- -1:2
eval(dx2x)
?eval
dx2x <- deriv(~ x^2, "x")
eval(dx2x)
dx2x <- deriv(~ x^2, "x")
eval(dx2x)
eval(dx2x(2))
dx2x <- deriv(~ x^2, "x");dx2x
str(dx2x)
eval(dx2x)
dx2x(2)
dx2x <- deriv(~ x^2, "x") ; dx2x
x <- -1:2
eval(dx2x)
trig.exp <- expression(sin(cos(x + y^2)))
( D.sc <- D(trig.exp, "x") )
all.equal(D(trig.exp[[1]], "x"), D.sc)
( dxy <- deriv(trig.exp, c("x", "y")) )
y <- 1
eval(dxy)
eval(D.sc)
?expression
authors <- data.frame(
surname = I(c("Tukey", "Venables", "Tierney", "Ripley", "McNeil")),
nationality = c("US", "Australia", "US", "UK", "Australia"),
deceased = c("yes", rep("no", 4)))
authors
?merge
library(readr)
aapl <- read_csv("~/Downloads/aapl (1).csv")
View(aapl)
library(readr)
googl <- read_csv("~/Downloads/googl.csv")
View(googl)
someDates <- goog[1:5,1]
someDates <- googl[1:5,1]
someDates
library(parsedate)
library(parsedate)
parse_date(goog[,1])
parse_date(googl[,1])
parse_date(googl[,1])
googl[,1]
betterDates<-as.Date(aapl$Date,format="%d-%b-%y"
ï¼‰
betterDates<-as.Date(aapl$Date,format="%d-%b-%y")
aapl$`ÿDate`
?lm
?parse_date()
parse_date("12/31/15")
googl[,1]
betterDates<-as.Date(aapl[,1],format="%d-%b-%y")
aapl[,1]
goog2 <- data.frame(Date = parse_date(goog$Date),
Close= goog$Close)
goog2 <- subset(goog2, Date>="2013-01-01" & Date<"2016-01-01")
plot(mtcars$mpg,col="red",yllim=c(0,2))
plot(mtcars$mpg,col="red",ylim=c(0,2))
plot(mtcars$cyl,mtcars$mpg,col="red",ylim=c(0,2))
mtcars
plot(mtcars$cyl,mtcars$mpg,col="red",ylim=c(0,10))
plot(mtcars$cyl,mtcars$mpg,col="red",ylim=c(0,20))
plot(mtcars$wt,mtcars$mpg,col="blue")
?byrow
nrow(a)
a<-matrix(1:12,3,4)
nrow(a)
length(a)
a+1:2
a
a+1:3
ls()
plot(mtcars$cyl,mtcars$mpg,col="red",ylim=c(0,2))
?with
?switch
client<-"other"
switch(client,prive=1.12,public=1.06,1)
client<-"hawefwaf"
switch(client,prive=1.12,public=1.06,1)
with(mtcars,plot(mpg,disp))
with(mtcars,boxplot(disp,mpg))
hist(mpg)
with(mtcars,hist(mpg))
?eval
deriv3(y ~ b0 + b1 * 2^(-x/th), c("b0", "b1", "th"),
c("b0", "b1", "th", "x") )
DD <- function(expr, name, order = 1) {
if(order < 1) stop("'order' must be >= 1")
if(order == 1) D(expr, name)
else DD(D(expr, name), name, order - 1)
}
DD(expression(sin(x^2)), "x", 3)
?sample
?rnorm
sample(10,2,1,)
?sample
sample(1,10)
sample(1,10,3)
sample(20,10,2)
?is.na
m<-matrix(1:8,ncol=4)
m
5>1
(5>1)*(1<5)
TRUE*TRUE
FALSE*FALSE
TRUE*FALSE
TRUE&FALSE
(1:21)[3<c(2,4)]
3<c(2,4)
x[x>5] <- 6
x<-1:10
x[x>5] <- 6
x
seq(1,20,2)
seq(1,10,3)
seq(1,20,3)
a<-rep(c(1,-1),2,each=3)
a
VO<-1:13
V<-VO*a
V
V1<-V[-c(14,15)]
V1
a<-1:1
a<-1:10
b<-c(a,a*2)
b
plot(rev)
plot(rev(sort(b)))
m<-matrix(1:9,3,3)
table(m)
table(b)
plot(table(b))
unique(b)
str(table(b))
str(b)
dim(m)
names(table(b))
b[b>20]
b<-1:30
b[b>30]
b[b>20]
table(b>10)
b%in%10
b
which(b%in%10)
for (i in c(10,13)){
print (1:i)
print(c(1:i,rev(1:i)))
}
fact1 <- function(i) prod (1:i)
fact1(5)
factorial(5)
prod(1:%)
prod(1:5)
sum(1:5)
fact3 <- function(i){
p <- 1
j <- 1
while (j <= i){
p <- p*j
j <- j + 1
}
return(p)
}
fact3(0)
b<-1:10
plot(b)
rank(b)
b<-c(2,4,6,7,2,1,3,4,1,8,9,3,6,,8,5,3,2,5)
b<-c(2,4,6,7,2,1,3,4,1,8,9,3,6,3,8,5,3,2,5)
rank(b)
plot(b,rank(b))
?rank
sort(b)
sort(b,decreasing=FALSE)
sort(b,decreasing=TRUE)
a<-a:10
a
a<-1:10
b<-2:20
b<-15:24
cbind(a,b)
order(a,b)
order(b,a)
?order
?rank
x1<-c(3,1,4,15,92)
rank(x1)
rank(x1,ties='random')
rank(x1,ties='random')
rank(x1,ties='random')
hist(x1,breaks=1)
hist(x1,breaks=20)
hist(b,breaks=20, freq=TRUE)
?hist
sample(c(1,2),10,prob=c(0.9,0.1),replace=TRUE)
M1 <- matrix(sample(rep(1:9,9),9*9,replace=FALSE),9,9)
M1
M1<-matrix(sample(1:9,9),3,3)
cbind(M1,M1)
rbind(M1,M1)
?lm
?abline
pmax(1:5,20:25)
?replicate
str(5)
as.int(5)
as.integer(5.3)
?ave
m<-matrix(1:12,3,4)
m
m[1,]
?merge
v<-c(1,2,3,4,5)
diff(v)
f2<-function(x) 5*x-exp(x)
plot(f2,xlim=c(-3,3))
f2(uniroot(f2,c(-3,1))$root)
uniroot(f2,c(1,3))$root
?all
L<-c(TRUE,FALSE)
all(L)
any(L)
rep(c(0,1),10)
rep(c(0,1),times=2)
rep(c(0,1),each=2)
y<-10:30
y[rep(c(TRUE,FALSE),10)]
?qmax
N<10000
N<-10000
sim1<-runif(N,min=0,max=1)
sim2<-runif(N,min=0,max=1)
s<-mean(sim1>sim2)
s
s<-mean(sim1^2)
s
s<-mean(sim^2>sim1)
s<0mean(simw^2>sim1)
s<-mean(sim2^2>sim1)
s
library(jsonlite)
library(httr)
library(dplyr)
base.url<-"https://congress.api.sunlightfoundation.com/"
path<-"/districts/locate?zip=98105"
response <- GET(url = base.url, path=path)
body <- content(response,"text")
response <- GET(url = base.url, path=path,querzip.code=98105)
body <- content(response,"text")
rep.data <- fromJSON(body)
rep.data <-flatten(rep.data)
rep.df <- as.data.frame(rep.data)
rep.zip.code <- select(rep.df,results.first_name,results.last_name,results.title,
results.party,results.chamber,results.phone,results.website,
results.twitter_id)
View(rep.df)
View(rep.zip.code)
base.url<-"https://congress.api.sunlightfoundation.com/"
path = "/legislators/locate?zip=98105"
response <- GET(url = base.url, path=path,querzip.code=98105)
body <- content(response,"text")
rep.data <- fromJSON(body)
rep.data <-flatten(rep.data)
rep.df <- as.data.frame(rep.data)
rep.zip.code <- select(rep.df,results.first_name,results.last_name,results.title,
results.party,results.chamber,results.phone,results.website,
results.twitter_id)
View(rep.zip.code)
colnames(rep.zip.code) <- c("First Name","Last Name","Title","Party","Chamber","Phone","Website","Twitter")
View(rep.zip.code)
path ="/committees?committee_id=SSAP&fields=members"
response <- GET(url = base.url, path=path)
body <- content(response,"text")
depth.data <- fromJSON(body)
depth.df <-depth.data$results$members
body <- fromJSON(content(response,"text"))$results$members[[1]] %>% flatten()
View(body)
check.maj.min <- filter(body,legislator.first_name == "Patty") %>% select(side)
check.maj.min
base.url<-"https://congress.api.sunlightfoundation.com/"
path<-"/districts/locate?zip=98105"
zip.code <-"98105"
response <- GET(url = base.url, path=path)
body <- content(response,"text")
zip.code.data <- fromJSON(body)
zip.code.data <-flatten(zip.code.data)
zip.code.df <- as.data.frame(zip.code.data)
View(zip.code.df)
View(rep.zip.code)
rep.data <- fromJSON(body)
rep.data <-flatten(rep.data)
rep.df <- as.data.frame(rep.data)
View(rep.df)
base.url<-"https://congress.api.sunlightfoundation.com/"
path = "/legislators/locate?zip=98105"
response <- GET(url = base.url, path=path,querzip.code=98105)
body <- content(response,"text")
rep.data <- fromJSON(body)
rep.data <-flatten(rep.data)
rep.df <- as.data.frame(rep.data)
View(rep.df)
rep.zip.code <- select(rep.df,results.first_name,results.last_name,results.title,
results.party,results.chamber,results.phone,results.website,
results.twitter_id)
colnames(rep.zip.code) <- c("First Name","Last Name","Title","Party","Chamber","Phone","Website","Twitter")
urls<-(rep.zip.code$results.website)
rep.website.link <- paste0("[",link,"](",urls,")")
rep.website.link <- paste0("[link](",urls,")")
rep.zip.code <- mutate(rep.zip.code, "Website"== rep.website.link)
View(rep.zip.code)
knitr::kable(head(rep.zip.code))
View(rep.zip.code)
rep.zip.code <- mutate(rep.zip.code, "Website"= rep.website.link)
View(rep.zip.code)
rep.zip.code <- mutate(rep.zip.code, Website= rep.website.link)
View(rep.zip.code)
rep.website.link
urls<-(rep.zip.code$results.website)
rep.website.link <- paste0("[link](",urls,")")
rep.website.link
rep.website.link <- paste0("[link](",rep.zip.code$results.website,")")
rep.website.link
rep.zip.code$results.website
rep.zip.code <- select(rep.df,results.first_name,results.last_name,results.title,
results.party,results.chamber,results.phone,results.website,
results.twitter_id)
rep.zip.code$results.website
urls<-(rep.zip.code$results.website)
rep.website.link <- paste0("[link](",rep.zip.code$results.website,")")
rep.zip.code <- mutate(rep.zip.code, Website= rep.website.link)
knitr::kable(head(rep.zip.code))
View(rep.zip.code)
knitr::kable(head(rep.zip.code))
View(rep.zip.code)
urls
rep.website.link <- paste0("[link](",rep.zip.code$results.website,")")
rep.website.link
rep.df
View(rep.df)
rep.df$results.website
twitter_id <- rep.df$results.twitter_id
rep.zip.code <- rep.df %>% mutate(websites = paste0("[link](",urls,")"),
twitter_ids = paste0("[link](www.twitter.com", twitter_id, ")")) %>% select(first_name)
rep.zip.code <- rep.df %>% mutate(websites = paste0("[link](",urls,")"),
twitter_ids = paste0("[link](www.twitter.com", twitter_id, ")")) %>% select(results.first_name)
rep.zip.code
rep.zip.code <- rep.df %>% mutate(websites = paste0("[link](",urls,")"),
twitter_ids = paste0("[link](www.twitter.com", twitter_id, ")")) %>%
select(results.first_name,results.last_name,results.title,results.party,results.chamber,websites,twitter_ids)
View(rep.zip.code)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(ggplot2)
?diamonds
?_column names
nrows(diamonds)
colnames(diamonds)
nrow(diamonds)
?sample_n()
diamonds.sample <- sample_n(diamonds,1000)
View(diamonds.sample)
ggplot(diamonds.sample)
ggplot(data=diamonds.sample)
ggplot(data = diamonds.sample) + geom_point(mappings = aes(x = carat,y = price))
?geom_point
ggplot(data = diamonds.sample) + geom_point(mapping = aes(x = carat,y = price))
ggplot(data = diamonds.sample) + geom_point(mapping = aes(x = carat,y = price), color = clarity)
ggplot(data = diamonds.sample) + geom_point(mapping = aes(x = carat,y = price, color = clarity))
ggplot(data = diamonds) + geom_point(mapping = aes(x = carat,y = price, color = clarity))
ggplot(data = diamonds.sample) + geom_point(mapping = aes(x = carat,y = price, color = "blue"))
ggplot(data = diamonds.sample) + geom_point(mapping = aes(x = carat,y = price, color = "red"))
ggplot(data = diamonds.sample) + geom_point(mapping = aes(x = carat,y = price), color = "blue")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x=cut))
ggplot(data = diamonds) +
stat_count(mapping = aes(x=cut))
ggplot(data = diamonds) +
stat_summary(mapping = aes(x = cut, y = depth),
fun.ymin = min, fun.ymax = max, fun.y = median)
shiny::runApp('Desktop/m18-shiny/demo-2')
runApp('Desktop/m18-shiny/demo-2')
runApp('Desktop/m18-shiny/demo-2')
runApp('Desktop/m18-shiny/demo-2')
runApp('Desktop/m18-shiny/demo-2')
runApp('Desktop/m18-shiny/demo-2')
runApp('Desktop/m18-shiny/demo-3')
runApp('Desktop/m18-shiny/demo-3')
runApp('Desktop/m18-shiny/demo-3')
life.expectancy <- c(75, 73, 71) var.to.graph <- 'life.expectancy' # Parse and evaluate var.to.graph eval(parse(text = var.to.graph))
life.expectancy <- c(75, 73, 71)
var.to.graph <- 'life.expectancy'
eval(parse(text = var.to.graph))
runApp('Desktop/m18-shiny/exercise-3')
setwd('~/Documents/info-201/m18-shiny/exercise-3/')
runApp('Desktop/m18-shiny/exercise-3')
runApp('Desktop/m18-shiny/exercise-3')
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
runApp('Desktop/m18-shiny/exercise-3')
library("plotly", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
runApp('Desktop/m18-shiny/exercise-3')
runApp('Desktop/m18-shiny/exercise-3')
runApp('Desktop/m18-shiny/exercise-3')
runApp('Desktop/m18-shiny/exercise-3')
runApp('Desktop/m18-shiny/exercise-3')
runApp('Desktop/m18-shiny/exercise-4')
runApp('Desktop/m18-shiny/exercise-4')
runApp('Desktop/m18-shiny/exercise-4')
runApp('Desktop/m18-shiny/exercise-4')
install.packages("HSUAR")
shiny::runApp('Desktop/INFO/m18-shiny/exercise-5')
runApp('Desktop/INFO/m18-shiny/exercise-5')
library(gapminder)
install.packages("gapminder")
library("gapminder", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("models")
install.packages("modelr")
library("modelr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("tidyverse")
library("tidyverse", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(haven)
dataset <- read_stata(NULL)
View(dataset)
install.packages("data.table")
library(data.table)
data <- fread("http://lib.stat.cmu.edu/DASL/Datafiles/Cereals.html")
View(data)
?fread()
View(data)
head(data)
str(data)
?fread()
df <- fread("http://lib.stat.cmu.edu/DASL/Datafiles/Cereals.html")
View(df)
install.packages("RCurl")
library("RCurl", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
df <-getURL("http://lib.stat.cmu.edu/DASL/Datafiles/Cereals.html",ssl.verifyhost=FALSE,ssl.verifypeer=FALSE)
View(df)
library(data.table)
df <- fread("http://lib.stat.cmu.edu/DASL/Datafiles/Cereals.html")
install.packages("XML")
library("XML", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
url <-"http://lib.stat.cmu.edu/DASL/Datafiles/Cereals.html"
urldata <- getURL(url)
data <- readHTMLTable(urldata,stringAsFactors =FALSE)
View(data)
str(urldata)
data <- readHTMLTable(rawToChar(urldata$content),stringAsFactor =FALSE)
shiny::runApp('Exercise5.21')
install.packages("HSAUR")
library("HSAUR", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
runApp('Exercise5.21')
runApp('Exercise5.21')
shiny::runApp('Exercise5.21')
runApp('Exercise5.21')
url <- "http://statweb.stanford.edu/~owen/courses/202/Cereals.txt"
read.delim(file = 'data/cereal.tsv', sep = '\t', header = TRUE)
?setwd()
runApp('Exercise5.21')
shiny::runApp('Desktop/INFO201FP')
shiny::runApp('Desktop/final-project')
setwd("~/Desktop/final-project")
setwd("~/Desktop/final-project")
setwd("~/Desktop/final-project")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("~/Desktop/final-project")
setwd("~/Desktop/final-project")
runApp()
runApp()
